?ecdf
# theta : location
# x : a vector with samples
n <- length(X)
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
<<<<<<< HEAD
?optim
?nlminb
?optimize
?ggplot2
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
warnings()
?logLik
x <- 1:5
lmx <- lm(x ~ 1)
logLik(lmx) # using print.logLik() method
utils::str(logLik(lmx))
lmx
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
warnings()
ll_cauchy <- -n*log(pi)- sum(term)
## va
x1 <- c(1.77, -0.23, 2.76, 3.80, 3.47, 56.75, -1.34, 4.24, -2.44,
3.29, 3.71, -2.40, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75)
StartPoints <- c(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38)
## lodaing package
library(ggplot2)
## first trial
# Problem 1.b
# loglikelihood
Theta_value <- seq(-5, 5, by=0.01)
term_in_loglik <- function(theta, x){
# theta : location
# x: scalar single sample
log(1+(theta-x))^2}
loglik_cauchy <- function(theta, X){
# theta : location
# x : a vector with samples
n <- length(X)
term <- sapply(X, function(x) term_in_loglik(theta, x))
ll_cauchy <- -n*log(pi)- sum(term)
ll_cauchy
}
LogLik_plot <- loglik_cauchy(Theta_value, x1)
View(loglik_cauchy)
View(term_in_loglik)
n <- length(x1)
term <- sapply(x1, function(x) term_in_loglik(Theta_value, x1))
warnings()
source('~/GitHub/optimization-yuqianliu/example.R')
source('~/GitHub/optimization-yuqianliu/example.R')
source('~/GitHub/optimization-yuqianliu/example.R')
source('~/GitHub/optimization-yuqianliu/example.R')
source('~/GitHub/optimization-yuqianliu/example.R')
x1 <- c(1.77, -0.23, 2.76, 3.80, 3.47, 56.75, -1.34, 4.24, -2.44,
3.29, 3.71, -2.40, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75)
1-x1
(1-x1)^2
sqrt((1-x1)^2)
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
g
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian.R')
curve(Theta_value,LogLik_plot)
plot(Theta_value,LogLik_plot)
?ggplot
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try1.R')
g
curve(loglik_cauchy,-5,5)
?for
?for()
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
g
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
?nlminb
z = nlminb(-11, loglik_cauchy)
z
z = nlminb(-11, -loglik_cauchy)
z = nlminb(-11, -1*loglik_cauchy)
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
z = nlminb(-11, ObjectFun)$value
?
?
rbind
?rbind
z = nlminb(-11, ObjectFun)
z
?dicauchy
mytab <- sapply(StartPoints, function(x0) nlminb(x0,ObjectFun))
View(mytab)
View(mytab)
View(z)
View(z)
mytab
dimnames(mytab) <- list(, StartPoints)
dimnames(mytab) <- list(StartPoints)
str(mytab)
dimnames(mytab) <- list(c(1:6),StartPoints)
mytab
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
mytab
dimnames(mytab) <- list(c("theta","objective","convergence","iterations","evaluations","mesage"),StartPoints)
mytab
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
mytab
??fixedpoint
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
?loglik
?logLik()
?lm
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
?log
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
?arcsin
theta_moment <- arcsin(mean(x2)-pi)
theta_moment <- asin(mean(x2)-pi)
theta_moment
StartPoints3 <- c(-pi:pi,number=200)
View(z)
View(z)
View(StartPoints3)
StartPoints3 <- seq(-pi:pi,len=200)
StartPoints3 <- seq(-pi:pi,length=200)
?seq
StartPoints3 <- seq(-pi:pi,length.out = 200)
?c
StartPoints3 <- seq(-pi,pi,length.out = 200)
source('~/GitHub/optimization-yuqianliu/mainQ2_Yuqian.R')
?nls
require(graphics)
DNase1 <- subset(DNase, Run == 1)
## using a selfStart model
fm1DNase1 <- nls(density ~ SSlogis(log(conc), Asym, xmid, scal), DNase1)
summary(fm1DNase1)
?runif
beetles <- data.frame(
days = c(0, 8, 28, 41, 63, 69, 97, 117, 135, 154),
beetles = c(2, 47, 192, 256, 768, 896, 1120, 896, 1184, 1024))
View(beetles)
beetles.days
beetles[1,1]
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
plot(tt,N)
ï¼Ÿnls
?nls
DNase1 <- subset(DNase, Run == 1)
View(DNase1)
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
View(DNase1)
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
?deSolve
??deSolve
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
View(mytab3)
str(mytab3)
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
mytab3
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
mytab3
source('~/GitHub/optimization-yuqianliu/getpdf.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
=======
?verbose
?nls
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
tt <-  c(8, 28, 41, 63, 69, 97, 117, 135, 154)
N <- c(47, 192, 256, 768, 896, 1120, 896, 1184, 1024)
N0 <- 2
mytab3 <- nls(N ~ K*N0/(N0+(K-N0)*exp(-r*tt)),
start = list(K = 2000, r = 0.1), trace = TRUE)
error <- matrix(data = NA, 500, 500)
>>>>>>> 88fa1a3608604ce3e06a1ad4031b03ad9425a64a
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
## va
## va
## va
x1 <- c(1.77, -0.23, 2.76, 3.80, 3.47, 56.75, -1.34, 4.24, -2.44,
3.29, 3.71, -2.40, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75)
StartPoints <- c(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38)
## lodaing package
library(ggplot2)
## Problem 1.b
# loglikelihood
Theta_value <- seq(-5, 5, by=0.05)
loglik_cauchy <- function(theta){
# theta : location
# x : a vector with samples
x1 <- c(1.77, -0.23, 2.76, 3.80, 3.47, 56.75, -1.34, 4.24, -2.44,
3.29, 3.71, -2.40, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75)
n <- length(x1)
term <- 0
for(i in 1:n){
term <- term + log(1+(theta-x1[i])^2)
}
#  a <- log(1+(theta-x1)^2)
ll_cauchy <- -n*log(pi)- term
ll_cauchy
}
LogLik_plot <- sapply(Theta_value, function(theta) loglik_cauchy(theta))
# df <- data.frame(Theta_value, LogLik_plot)
# g <- ggplot(df, aes(Theta_value, LogLik_plot))
# plot log-likelihood
plot(Theta_value, LogLik_plot,xlab = "theta",ylab = "log-likelihood",
main = "Log-likelihood of Cauchy")
ObjectFun <- function(theta){
-1*loglik_cauchy(theta)  #nlminb is finding minimum value, then multiply by -1
}
#Newton-Raphson
# z = nlminb(-11, ObjectFun)
mytab <- sapply(c(StartPoints, mean(x1)), function(x0) nlminb(x0,ObjectFun))
colnames(mytab) <- c(StartPoints, mean(x1))
View(mytab)
mytab
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
source('~/GitHub/optimization-yuqianliu/mainQ3_Yuqian.R')
?cat
?attr
x <- 1:10
attr(x,"dim") <- c(2, 5)
x
x <- 1:10
attr(x,"gradient") <- c(2, 5)
x
source('~/GitHub/optimization-yuqianliu/example3.R')
source('~/GitHub/optimization-yuqianliu/example3.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/.active-rstudio-document')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
c
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
-0.59654677+0.58536188
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
sy
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/test1.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
View(mytab1.d.withNewton)
mytab1
mytab
a <- subset(mytab,select = 'par')
str(mytab)
m[which(m[,1] %in% c(5,7,17),]
m <- matrix(sample(1:24,24,T),ncol=4)
m[which(m[,1] %in% c(5,7,17),]
m[which(m[,1] %in% c(5,7,17)]
m[,1]
mytab[,1]
mytab[1,1]
mytab[1,]
a <- mytab[1,]
a
View(a)
View(a)
View(a)
a <- mytab[1,]$value
View(a)
mytab[1,1]
source('~/.active-rstudio-document', echo=TRUE)
ength(c(StartPoints, mean(x1)))
length(c(StartPoints, mean(x1)))
for (i in length(c(StartPoints, mean(x1)))) {
theta1.b[i] <-  mytab[1,i]
}
a <- mytab[1,1]
a
a <- mytab[1,1]$value
a
mytab$par
mytab$11
?nlminb
mytab
$par
$par,-11
source('~/GitHub/optimization-yuqianliu/mainQ1_Yuqian_try2.R')
mytab
$par
L = list(one=1, two=c(1,2
five=seq(0, 1, length=5))
L = list(one=1, two=c(1,2),five=seq(0, 1, length=5))
L
names(L)
names(mytab)
str(L)
str(mytab)
dimnames(mytab) <- list(c("theta","objective","convergence","iterations",
"evaluations","mesage"),c(StartPoints, mean(x1)))
str(mytab)
names(mytab)
View(mytab)
mytab
mytab[1,1]
a <- mytab[1,1]
a
str(a)
names(a)
c(mytab[1,1], mytab[1,2])
L
A <- c(mytab[1,1], mytab[1,2])
A
dimnames(A)
names(A) <- list(c("a","b"))
names(A)
A
names(A) <- list("a","b")
A
?rbind
View(A)
theta1.b <-  mytab[1,1]
itel1.b <-  mytab[4,1]
for (i in length(theta1.b)-1) {
theta1.b <-  c(theta1.b, mytab[1,i+1])
itel1.b <-  c(itel1.b, mytab[1,i+1])
}
View(L)
View(L)
theta1.b
theta1.b <-  mytab[1,1]
itel1.b <-  mytab[4,1]
for (i in 9) {
theta1.b <-  c(theta1.b, mytab[1,i+1])
itel1.b <-  c(itel1.b, mytab[1,i+1])
}
theta1.b <-  mytab[1,1]
itel1.b <-  mytab[4,1]
for (i in 1:9) {
theta1.b <-  c(theta1.b, mytab[1,i+1])
itel1.b <-  c(itel1.b, mytab[1,i+1])
}
itel1.b
theta1.b <-  mytab[1,1]
itel1.b <-  mytab[4,1]
for (i in 1:9) {
theta1.b <-  c(theta1.b, mytab[1,i+1])
itel1.b <-  c(itel1.b, mytab[4,i+1])
}
itel1.b
names(theta1.b) <- list(c(StartPoints, mean(x1)))
theta1.b
names(theta1.b) <- list(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38, mean(x1))
theta1.b
mytab1.b <- data.frame(`Starts` = c(StartPoints, mean(x1)) , `Theta`= theta1.b,
`Iteration` = itel1.b, stringsAsFactors = FALSE, check.names = FALSE)
mytab1.b
mytab1.b <- cbind(theta1.b,itel1.b)
mytab1.b
theta1.b <-  mytab[1,1]
itel1.b <-  mytab[4,1]
for (i in 1:9) {
theta1.b <-  c(theta1.b, mytab[1,i+1])
itel1.b <-  c(itel1.b, mytab[4,i+1])
}
mytab1.b <- cbind(theta1.b,itel1.b)
mytab1.b
names(mytab1.b) <- list(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38, "mean(x1)")
mytab1.b
require(knitr)
knitr::opts_chunk$set(echo = TRUE)
source("mainQ1_Yuqian_try2.R")
source("mainQ2_Yuqian.R")
source("mainQ3_Yuqian.R")
## specify global chunk options
knitr::opts_chunk$set(fig.width = 5, fig.height = 4, dpi = 300,
out.width = "90%", fig.align = "center")
plot(Theta_value, LogLik_plot,xlab = "theta",ylab = "log-likelihood",
main = "1.b Log-likelihood of Cauchy.")
knitr::kable(mytab1.b, caption = 'Newton-Raphson Method Results', booktabs = TRUE)
knitr::kable(mytab1.d_theta, caption = 'Fixed Point Method Results', booktabs = TRUE)
